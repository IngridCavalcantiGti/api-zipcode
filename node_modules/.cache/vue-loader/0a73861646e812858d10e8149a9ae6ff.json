{"remainingRequest":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ingrid\\Projetos\\cep-novo\\src\\components\\FormCep.vue?vue&type=template&id=bdc97c2c&","dependencies":[{"path":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\src\\components\\FormCep.vue","mtime":1644767429786},{"path":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644692969416},{"path":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1644692971432},{"path":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644692969416},{"path":"C:\\Users\\Ingrid\\Projetos\\cep-novo\\node_modules\\vue-loader\\lib\\index.js","mtime":1644692970902}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}